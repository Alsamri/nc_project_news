name: Backend CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nc_news_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            pg_isready -U postgres -h localhost -p 5432 -d nc_news_test && break
            sleep 2
          done

      - name: Debug PostgreSQL connection
        run: |
          echo "PGHOST: $PGHOST"
          echo "PGPORT: $PGPORT"
          echo "PGUSER: $PGUSER"
          echo "PGDATABASE: $PGDATABASE"
          pg_isready -U postgres -h localhost -p 5432 -d nc_news_test

      - name: Setup databases
        run: npm run setup-dbs
        env:
          PGDATABASE: nc_news_test
          PGUSER: postgres
          PGPASSWORD: postgres
          PGHOST: localhost
          PGPORT: 5432

      - name: Run tests
        run: npm test
        env:
          PGDATABASE: nc_news_test
          PGUSER: postgres
          PGPASSWORD: postgres
          PGHOST: localhost
          PGPORT: 5432

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Render
        run: |
          curl -X POST \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys
